package db

import (
	"context"
	"crypto/rand"
	"fmt"
	"math/big"

	"github.com/testcontainers/testcontainers-go"
	"github.com/testcontainers/testcontainers-go/wait"
)

// StartMongoContainer creates and starts an instance of the MongoDB container.
func StartMongoContainer(ctx context.Context) (testcontainers.Container, error) {
	return testcontainers.GenericContainer(ctx,
		testcontainers.GenericContainerRequest{
			ContainerRequest: testcontainers.ContainerRequest{
				Image:        "mongo",
				ExposedPorts: []string{"27017/tcp"},
				WaitingFor: wait.ForAll(
					wait.ForLog("Waiting for connections"),
					wait.ForListeningPort("27017/tcp"),
				),
			},
			Started: true,
		})
}

// DBNameLen is the length of a database name generated by RandomDatabaseName.
const DBNameLen = 15

// DBNameChars is the set of characters used by RandomDatabaseName.
const DBNameChars = "abcdefghijklmnopqrstuvwxyz"

// RandomDatabaseName generates a random valid MongoDB database name.
func RandomDatabaseName() string {
	dbChars := make([]byte, DBNameLen)
	for i := 0; i < DBNameLen; i++ {
		bigN, err := rand.Int(rand.Reader, big.NewInt(int64(len(DBNameChars))))
		if err != nil {
			panic(fmt.Errorf("error getting a random int: %w", err))
		}
		dbChars[i] = DBNameChars[int(bigN.Int64())]
	}
	return string(dbChars)
}
